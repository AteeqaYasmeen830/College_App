import 'package:college_app/Admission.dart';
import 'package:college_app/Attendance.dart';
import 'package:college_app/Courses.dart';
import 'package:college_app/Event.dart';
import 'package:college_app/Fee.dart';
import 'package:college_app/Notifications.dart';
import 'package:college_app/Assignment.dart';
import 'package:college_app/Timetable.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

class Studentpage extends StatelessWidget {
  final Color mainColor = Color(0xff006769);
  final TextStyle textStyle = TextStyle(
    fontSize: 20,
    color: Color(0xff006769),
    fontWeight: FontWeight.bold,
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        children: [
          buildBackground(),
          SingleChildScrollView(
            child: Column(
              children: [
                SizedBox(height: 100),
                buildProfileCard(),
                SizedBox(height: 10),
                buildGrid(context),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget buildBackground() {
    return Stack(
      children: [
        Container(
          width: double.infinity,
          height: double.infinity,
          decoration: BoxDecoration(
            gradient: LinearGradient(
              colors: [
                mainColor.withOpacity(0.9),
                Color(0xFFA4EAFE).withOpacity(0.9),
                Color(0xffa4c7c7).withOpacity(0.9),
              ],
              begin: Alignment.topCenter,
              end: Alignment.bottomCenter,
            ),
          ),
        ),
        Positioned(
          top: -160,
          left: -160,
          child: buildCircleDecoration(),
        ),
        Positioned(
          bottom: -160,
          right: -160,
          child: buildCircleDecoration(),
        ),
      ],
    );
  }

  Widget buildCircleDecoration() {
    return Container(
      height: 440,
      width: 440,
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(900),
        color: mainColor,
      ),
    );
  }

  Widget buildProfileCard() {
    return Center(
      child: Container(
        height: 200,
        width: 320,
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(50),
          border: Border.all(
            color: mainColor,
            width: 2,
          ),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            CircleAvatar(
              radius: 40,
              child: Image(
                image: AssetImage('assets/images/girlStudent.png'),
              ),
            ),
            SizedBox(height: 5),
            Text('Ateeqa Yasmeen', style: textStyle),
            Text('Roll no 83', style: textStyle),
            Text('Semester 8th', style: textStyle),
          ],
        ),
      ),
    );
  }

  Widget buildGrid(BuildContext context) {
    return Container(
      height: 490,
      width: 320,
      child: GridView.count(
        crossAxisCount: 2,
        crossAxisSpacing: 5,
        mainAxisSpacing: 5,
        children: [
          buildGridItem(context, Icons.add_task, 'Admission', Admission()),
          buildGridItem(context, Icons.event, 'Event', Event()),
          buildGridItem(context, Icons.fact_check_sharp, 'Fee', Fee()),
          buildGridItem(context, Icons.perm_contact_calendar_outlined, 'Attendance', Attendance()),
          buildGridItem(context, Icons.access_alarm, 'Timetable', Timetable()),
          buildGridItem(context, Icons.calendar_month, 'Courses', Courses()),
          buildGridItem(context, Icons.notification_add, 'Notifications', Notifications()),
          buildGridItem(context, Icons.assignment, 'Assignment', Assignment()),
        ],
      ),
    );
  }

  Widget buildGridItem(BuildContext context, IconData icon, String title, Widget page) {
    return Padding(
      padding: const EdgeInsets.all(6.0),
      child: InkWell(
        onTap: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => page,
            ),
          );
        },
        child: Container(
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.circular(30),
            border: Border.all(
              color: mainColor,
              width: 2,
            ),
          ),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Icon(icon, size: 70, color: mainColor),
              Text(title, style: textStyle),
            ],
          ),
        ),
      ),
    );
  }
}




 Container(
            width: double.infinity,
            height: double.infinity,
            decoration: BoxDecoration(
              gradient: LinearGradient(
                colors: [
                  Color(0xFF00B4D8),
                  Color(0xFF0077B6),
                ],
                begin: Alignment.topCenter,
                end: Alignment.bottomCenter,
              ),
            ),
            child: SafeArea(
              child: SingleChildScrollView(
                child: Column(
                  children: [
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Container(
                        height: 150,
                        width: 350,
                        child: Image(
                          image: AssetImage('assets/images/Cap.png'),
                        ),
                      ),
                    ),
                    Container(
                      margin: EdgeInsets.only(left: 16, right: 16),
                      padding: EdgeInsets.all(16),
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(15),
                        color: Colors.white.withOpacity(0.9),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black26,
                            blurRadius: 10,
                            offset: Offset(0, 5),
                          ),
                        ],
                      ),
                      child: Form(
                        key: _formKey,
                        child: Column(
                          children: [
                            Text(
                              'Sign Up',
                              style: TextStyle(
                                fontSize: 34,
                                fontWeight: FontWeight.bold,
                                color: Color(0xFF0077B6),
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(2.0),
                              child: TextFormField(
                                decoration: InputDecoration(
                                  labelText: 'Email',
                                  border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10),
                                    borderSide: BorderSide.none,
                                  ),
                                  enabledBorder: UnderlineInputBorder(
                                    borderSide: BorderSide(
                                      color: Color(0xFF0077B6),
                                    ),
                                  ),
                                  suffixIcon: Icon(Icons.email, color: Color(0xFF0077B6)),
                                  labelStyle: TextStyle(color: Color(0xFF0077B6)),
                                ),
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'Please enter your email';
                                  }
                                  String pattern = r'^[^@]+@gmail\.com$';
                                  RegExp regex = RegExp(pattern);
                                  if (!regex.hasMatch(value)) {
                                    return 'Please enter a valid Email address';
                                  }
                                  return null;
                                },
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(2.0),
                              child: TextFormField(
                                decoration: InputDecoration(
                                  labelText: 'Password',
                                  border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10),
                                    borderSide: BorderSide.none,
                                  ),
                                  enabledBorder: UnderlineInputBorder(
                                    borderSide: BorderSide(
                                      color: Color(0xFF0077B6),
                                    ),
                                  ),
                                  suffixIcon: Icon(Icons.lock, color: Color(0xFF0077B6)),
                                  labelStyle: TextStyle(color: Color(0xFF0077B6)),
                                ),
                                obscureText: true,
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'Please enter your password';
                                  }
                                  if (value.length < 6) {
                                    return 'Password must be at least 6 characters long';
                                  }
                                  return null;
                                },
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(2.0),
                              child: TextFormField(
                                decoration: InputDecoration(
                                  labelText: 'User Name',
                                  border: OutlineInputBorder(
                                    borderRadius: BorderRadius.circular(10),
                                    borderSide: BorderSide.none,
                                  ),
                                  enabledBorder: UnderlineInputBorder(
                                    borderSide: BorderSide(
                                      color: Color(0xFF0077B6),
                                    ),
                                  ),
                                  suffixIcon: Icon(Icons.person, color: Color(0xFF0077B6)),
                                  labelStyle: TextStyle(color: Color(0xFF0077B6)),
                                ),
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'Please enter your username';
                                  }
                                  return null;
                                },
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(2.0),
                              child: DropdownButtonFormField<String>(
                                decoration: InputDecoration(
                                  labelText: 'Role',
                                  border: OutlineInputBorder(
                                    borderSide: BorderSide.none,
                                    borderRadius: BorderRadius.circular(10),
                                  ),
                                  enabledBorder: UnderlineInputBorder(
                                    borderSide: BorderSide(color: Color(0xFF0077B6)),
                                  ),
                                  labelStyle: TextStyle(color: Color(0xFF0077B6)),
                                ),
                                items: ['Student', 'Teacher']
                                    .map((role) => DropdownMenuItem<String>(
                                  value: role,
                                  child: Text(role),
                                ))
                                    .toList(),
                                onChanged: (value) {
                                  setState(() {
                                    _selectedRole = value;
                                  });
                                },
                                validator: (value) {
                                  if (value == null || value.isEmpty) {
                                    return 'Please select your role';
                                  }
                                  return null;
                                },
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.all(5.0),
                              child: ElevatedButton(
                                onPressed: () {
                                  if (_formKey.currentState?.validate() == true) {
                                    if (_selectedRole == 'Student') {
                                      Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                            builder: (context) => Studentpage()),
                                      );
                                    } else if (_selectedRole == 'Teacher') {
                                      Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                            builder: (context) => Teacherpage()),
                                      );
                                    }
                                  }
                                },
                                child: Text('Sign Up'),
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: Color(0xFF0077B6),
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(10),
                                  ),
                                  padding: EdgeInsets.symmetric(horizontal: 40, vertical: 15),
                                ),
                              ),
                            ),
                            TextButton(
                              onPressed: () {
                                Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Loginpage(),
                                  ),
                                );
                              },
                              child: Text(
                                'Already have an account? Login',
                                style: TextStyle(color: Color(0xFF0077B6)),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ),